{"ast":null,"code":"import ReconnectingWebSocket from \"reconnecting-websocket\";\nimport networkConfiguration from \"@/network/configuration\";\nimport useFriendStore from \"@/store/friend\";\nimport { showToast } from \"vant\";\nexport default function initializeWebsocket(username, role) {\n  let friendStore = useFriendStore();\n  let {\n    host,\n    port,\n    path\n  } = {\n    ...networkConfiguration.server.webSocketServer\n  };\n  let connection = new ReconnectingWebSocket(`ws://${host}:${port}${path}/${username}`);\n  connection.onmessage = event => {\n    let message = JSON.parse(event.data);\n    console.log(\"131312\" + message);\n    friendStore.onlineList = message;\n    console.log(\"webSocketConnection.onmessage:\", message);\n  };\n  connection.onclose = event => {\n    console.log(\"webSocketConnection.onclose:\", event);\n    showToast(\"network connection closed\");\n  };\n  connection.onerror = event => {\n    console.log(\"webSocketConnection.onerror:\", event);\n    showToast(\"network connection error\");\n  };\n  connection.onopen = event => {\n    console.log(\"webSocketConnection.onopen:\", event);\n  };\n}","map":{"version":3,"names":["ReconnectingWebSocket","networkConfiguration","useFriendStore","showToast","initializeWebsocket","username","role","friendStore","host","port","path","server","webSocketServer","connection","onmessage","event","message","JSON","parse","data","console","log","onlineList","onclose","onerror","onopen"],"sources":["/Users/jiezhou/IdeaProjects/graduationPro/web/src/plugins/initialize-websocket/index.js"],"sourcesContent":["import ReconnectingWebSocket from \"reconnecting-websocket\";\nimport networkConfiguration from \"@/network/configuration\";\nimport useFriendStore from \"@/store/friend\";\nimport {showToast} from \"vant\";\n\nexport default function initializeWebsocket (username,role) {\n    let friendStore = useFriendStore();\n\n    let {host, port, path} = {...networkConfiguration.server.webSocketServer};\n    let connection = new ReconnectingWebSocket(`ws://${host}:${port}${path}/${username}`);\n    connection.onmessage = event => {\n        let message = JSON.parse(event.data);\n        console.log(\"131312\"+message);\n        friendStore.onlineList = message;\n        console.log(\"webSocketConnection.onmessage:\", message);\n    };\n\n    connection.onclose = event => {\n        console.log(\"webSocketConnection.onclose:\", event);\n        showToast(\"network connection closed\");\n    };\n\n    connection.onerror = event => {\n        console.log(\"webSocketConnection.onerror:\", event);\n        showToast(\"network connection error\");\n    };\n\n    connection.onopen = event => {\n        console.log(\"webSocketConnection.onopen:\", event);\n    };\n}"],"mappings":"AAAA,OAAOA,qBAAqB,MAAM,wBAAwB;AAC1D,OAAOC,oBAAoB,MAAM,yBAAyB;AAC1D,OAAOC,cAAc,MAAM,gBAAgB;AAC3C,SAAQC,SAAS,QAAO,MAAM;AAE9B,eAAe,SAASC,mBAAmBA,CAAEC,QAAQ,EAACC,IAAI,EAAE;EACxD,IAAIC,WAAW,GAAGL,cAAc,CAAC,CAAC;EAElC,IAAI;IAACM,IAAI;IAAEC,IAAI;IAAEC;EAAI,CAAC,GAAG;IAAC,GAAGT,oBAAoB,CAACU,MAAM,CAACC;EAAe,CAAC;EACzE,IAAIC,UAAU,GAAG,IAAIb,qBAAqB,CAAE,QAAOQ,IAAK,IAAGC,IAAK,GAAEC,IAAK,IAAGL,QAAS,EAAC,CAAC;EACrFQ,UAAU,CAACC,SAAS,GAAGC,KAAK,IAAI;IAC5B,IAAIC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;IACpCC,OAAO,CAACC,GAAG,CAAC,QAAQ,GAACL,OAAO,CAAC;IAC7BT,WAAW,CAACe,UAAU,GAAGN,OAAO;IAChCI,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEL,OAAO,CAAC;EAC1D,CAAC;EAEDH,UAAU,CAACU,OAAO,GAAGR,KAAK,IAAI;IAC1BK,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEN,KAAK,CAAC;IAClDZ,SAAS,CAAC,2BAA2B,CAAC;EAC1C,CAAC;EAEDU,UAAU,CAACW,OAAO,GAAGT,KAAK,IAAI;IAC1BK,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEN,KAAK,CAAC;IAClDZ,SAAS,CAAC,0BAA0B,CAAC;EACzC,CAAC;EAEDU,UAAU,CAACY,MAAM,GAAGV,KAAK,IAAI;IACzBK,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEN,KAAK,CAAC;EACrD,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}