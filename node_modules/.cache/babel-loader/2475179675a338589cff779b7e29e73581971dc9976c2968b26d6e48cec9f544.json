{"ast":null,"code":"import ReconnectingWebSocket from \"reconnecting-websocket\";\nimport networkConfiguration from \"@/network/configuration\";\nimport useFriendStore from \"@/store/friend\";\nimport { showToast } from \"vant\";\nimport $ from \"jquery\";\nimport { apiUrl } from \"../../../config\";\nimport router from \"@/router\";\nexport default function initializeWebsocket(username) {\n  let friendStore = useFriendStore();\n  let {\n    host,\n    port,\n    path\n  } = {\n    ...networkConfiguration.server.webSocketServer\n  };\n  let connection = new ReconnectingWebSocket(`ws://${host}:${port}${path}/${username}`);\n  connection.onmessage = event => {\n    let message = JSON.parse(event.data);\n    $.ajax({\n      url: `${apiUrl}/your-endpoint`,\n      // 替换为你的后端接口URL\n      type: 'POST',\n      // 替换为你的请求类型\n      data: {\n        message: message\n      },\n      success: function (resp) {\n        // 根据返回的数据来决定是否执行\n        if (resp.success) {\n          // 替换为你的判断条件\n          friendStore.onlineList = message;\n        }\n      },\n      error: function (err) {\n        console.log(\"Error:\", err);\n      }\n    });\n    console.log(\"webSocketConnection.onmessage:\", message);\n  };\n  connection.onclose = event => {\n    console.log(\"webSocketConnection.onclose:\", event);\n    showToast(\"network connection closed\");\n  };\n  connection.onerror = event => {\n    console.log(\"webSocketConnection.onerror:\", event);\n    showToast(\"network connection error\");\n  };\n  connection.onopen = event => {\n    console.log(\"webSocketConnection.onopen:\", event);\n  };\n}","map":{"version":3,"names":["ReconnectingWebSocket","networkConfiguration","useFriendStore","showToast","$","apiUrl","router","initializeWebsocket","username","friendStore","host","port","path","server","webSocketServer","connection","onmessage","event","message","JSON","parse","data","ajax","url","type","success","resp","onlineList","error","err","console","log","onclose","onerror","onopen"],"sources":["/Users/jiezhou/IdeaProjects/web/src/plugins/initialize-websocket/index.js"],"sourcesContent":["import ReconnectingWebSocket from \"reconnecting-websocket\";\nimport networkConfiguration from \"@/network/configuration\";\nimport useFriendStore from \"@/store/friend\";\nimport {showToast} from \"vant\";\nimport $ from \"jquery\";\nimport {apiUrl} from \"../../../config\";\nimport router from \"@/router\";\n\nexport default function initializeWebsocket (username) {\n    let friendStore = useFriendStore();\n\n    let {host, port, path} = {...networkConfiguration.server.webSocketServer};\n    let connection = new ReconnectingWebSocket(`ws://${host}:${port}${path}/${username}`);\n    connection.onmessage = event => {\n        let message = JSON.parse(event.data);\n\n        $.ajax({\n            url: `${apiUrl}/your-endpoint`, // 替换为你的后端接口URL\n            type: 'POST', // 替换为你的请求类型\n            data: {\n                message: message\n            },\n            success: function(resp) {\n                // 根据返回的数据来决定是否执行\n                if (resp.success) { // 替换为你的判断条件\n                    friendStore.onlineList = message;\n                }\n            },\n            error: function(err) {\n                console.log(\"Error:\", err);\n            }\n        });\n        console.log(\"webSocketConnection.onmessage:\", message);\n    };\n\n    connection.onclose = event => {\n        console.log(\"webSocketConnection.onclose:\", event);\n        showToast(\"network connection closed\");\n    };\n\n    connection.onerror = event => {\n        console.log(\"webSocketConnection.onerror:\", event);\n        showToast(\"network connection error\");\n    };\n\n    connection.onopen = event => {\n        console.log(\"webSocketConnection.onopen:\", event);\n    };\n}\n\n\n"],"mappings":"AAAA,OAAOA,qBAAqB,MAAM,wBAAwB;AAC1D,OAAOC,oBAAoB,MAAM,yBAAyB;AAC1D,OAAOC,cAAc,MAAM,gBAAgB;AAC3C,SAAQC,SAAS,QAAO,MAAM;AAC9B,OAAOC,CAAC,MAAM,QAAQ;AACtB,SAAQC,MAAM,QAAO,iBAAiB;AACtC,OAAOC,MAAM,MAAM,UAAU;AAE7B,eAAe,SAASC,mBAAmBA,CAAEC,QAAQ,EAAE;EACnD,IAAIC,WAAW,GAAGP,cAAc,CAAC,CAAC;EAElC,IAAI;IAACQ,IAAI;IAAEC,IAAI;IAAEC;EAAI,CAAC,GAAG;IAAC,GAAGX,oBAAoB,CAACY,MAAM,CAACC;EAAe,CAAC;EACzE,IAAIC,UAAU,GAAG,IAAIf,qBAAqB,CAAE,QAAOU,IAAK,IAAGC,IAAK,GAAEC,IAAK,IAAGJ,QAAS,EAAC,CAAC;EACrFO,UAAU,CAACC,SAAS,GAAGC,KAAK,IAAI;IAC5B,IAAIC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;IAEpCjB,CAAC,CAACkB,IAAI,CAAC;MACHC,GAAG,EAAG,GAAElB,MAAO,gBAAe;MAAE;MAChCmB,IAAI,EAAE,MAAM;MAAE;MACdH,IAAI,EAAE;QACFH,OAAO,EAAEA;MACb,CAAC;MACDO,OAAO,EAAE,SAAAA,CAASC,IAAI,EAAE;QACpB;QACA,IAAIA,IAAI,CAACD,OAAO,EAAE;UAAE;UAChBhB,WAAW,CAACkB,UAAU,GAAGT,OAAO;QACpC;MACJ,CAAC;MACDU,KAAK,EAAE,SAAAA,CAASC,GAAG,EAAE;QACjBC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,GAAG,CAAC;MAC9B;IACJ,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEb,OAAO,CAAC;EAC1D,CAAC;EAEDH,UAAU,CAACiB,OAAO,GAAGf,KAAK,IAAI;IAC1Ba,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEd,KAAK,CAAC;IAClDd,SAAS,CAAC,2BAA2B,CAAC;EAC1C,CAAC;EAEDY,UAAU,CAACkB,OAAO,GAAGhB,KAAK,IAAI;IAC1Ba,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEd,KAAK,CAAC;IAClDd,SAAS,CAAC,0BAA0B,CAAC;EACzC,CAAC;EAEDY,UAAU,CAACmB,MAAM,GAAGjB,KAAK,IAAI;IACzBa,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEd,KAAK,CAAC;EACrD,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}