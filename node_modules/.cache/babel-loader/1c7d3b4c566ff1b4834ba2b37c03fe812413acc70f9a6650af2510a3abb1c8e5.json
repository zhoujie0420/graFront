{"ast":null,"code":"import Peer from \"peerjs\";\nimport networkConfiguration from \"@/network/configuration\";\nimport usePeerStore from \"@/store/peer\";\nimport { showToast } from \"vant\";\nexport default {\n  install(app) {\n    console.log(\"invoked initialize peer plugin\");\n    app.config.globalProperties.$initializePeer = new Promise(resolve => {\n      let peerStore = usePeerStore();\n      let {\n        host,\n        port,\n        path\n      } = {\n        ...networkConfiguration.server.peerServer\n      };\n      let localPeer = new Peer({\n        host,\n        port,\n        path\n      });\n      localPeer.on(\"connection\", dataConnection => {\n        console.log(\"localPeer on connection\", dataConnection);\n        if (peerStore.dataConnection) {\n          dataConnection.on(\"open\", () => {\n            dataConnection.send({\n              instruction: peerStore.instruction.busy\n            });\n          });\n        } else {\n          dataConnection.on(\"data\", data => {\n            console.log(\"dataConnection data\", data);\n\n            //请求通话\n            if (data.instruction === peerStore.instruction.request) {\n              peerStore.dataConnection = dataConnection;\n              //激活通知\n              peerStore.activateNotification = true;\n            }\n\n            //对方取消\n            else if (data.instruction === peerStore.instruction.cancel) {\n              //关闭数据连接\n              peerStore.dataConnection.close();\n              peerStore.dataConnection = undefined;\n              //取消激活通知\n              peerStore.activateNotification = false;\n            }\n\n            //对方挂断\n            else if (data.instruction === peerStore.instruction.ringOff) {\n              //关闭数据连接\n              peerStore.dataConnection.close();\n              peerStore.dataConnection = undefined;\n              //关闭媒体连接\n              peerStore.mediaConnection.close();\n              peerStore.mediaConnection = undefined;\n            }\n          });\n        }\n      });\n      localPeer.on(\"call\", mediaConnection => {\n        console.log(\"localPeer call\", mediaConnection);\n        peerStore.mediaConnection = mediaConnection;\n      });\n      localPeer.on(\"disconnected\", () => {\n        console.warn(\"localPeer disconnected\");\n        localPeer.reconnect();\n        showToast(\"video call component disconnected\");\n      });\n      localPeer.on(\"error\", error => {\n        console.error(\"localPeer error,the error information is : \", JSON.stringify(error));\n        showToast(\"video call component error\");\n      });\n      localPeer.on(\"open\", localPeerId => {\n        console.log(\"localPeer opened,the local peer id is: \", localPeerId);\n        peerStore.localPeer = localPeer;\n        resolve();\n      });\n    });\n  }\n};","map":{"version":3,"names":["Peer","networkConfiguration","usePeerStore","showToast","install","app","console","log","config","globalProperties","$initializePeer","Promise","resolve","peerStore","host","port","path","server","peerServer","localPeer","on","dataConnection","send","instruction","busy","data","request","activateNotification","cancel","close","undefined","ringOff","mediaConnection","warn","reconnect","error","JSON","stringify","localPeerId"],"sources":["/Users/jiezhou/IdeaProjects/graduationPro/web/src/plugins/initialize-peer/index.js"],"sourcesContent":["import Peer from \"peerjs\";\nimport networkConfiguration from \"@/network/configuration\";\nimport usePeerStore from \"@/store/peer\";\nimport {showToast} from \"vant\";\n\nexport default {\n    install(app) {\n        console.log(\"invoked initialize peer plugin\");\n        app.config.globalProperties.$initializePeer = new Promise(resolve => {\n            let peerStore = usePeerStore();\n\n            let {host, port, path} = {...networkConfiguration.server.peerServer};\n            let localPeer = new Peer({host, port, path});\n\n            localPeer.on(\"connection\", dataConnection => {\n                console.log(\"localPeer on connection\", dataConnection);\n                if (peerStore.dataConnection) {\n                    dataConnection.on(\"open\", () => {\n                        dataConnection.send({\n                            instruction: peerStore.instruction.busy\n                        });\n                    });\n                } else {\n                    dataConnection.on(\"data\", data => {\n                        console.log(\"dataConnection data\", data);\n\n                        //请求通话\n                        if (data.instruction === peerStore.instruction.request) {\n                            peerStore.dataConnection = dataConnection;\n                            //激活通知\n                            peerStore.activateNotification = true;\n                        }\n\n                        //对方取消\n                        else if (data.instruction === peerStore.instruction.cancel) {\n                            //关闭数据连接\n                            peerStore.dataConnection.close();\n                            peerStore.dataConnection = undefined;\n                            //取消激活通知\n                            peerStore.activateNotification = false;\n                        }\n\n                        //对方挂断\n                        else if (data.instruction === peerStore.instruction.ringOff) {\n                            //关闭数据连接\n                            peerStore.dataConnection.close();\n                            peerStore.dataConnection = undefined;\n                            //关闭媒体连接\n                            peerStore.mediaConnection.close();\n                            peerStore.mediaConnection = undefined;\n                        }\n                    });\n                }\n            });\n\n            localPeer.on(\"call\", mediaConnection => {\n                console.log(\"localPeer call\", mediaConnection);\n                peerStore.mediaConnection = mediaConnection;\n            });\n\n            localPeer.on(\"disconnected\", () => {\n                console.warn(\"localPeer disconnected\");\n                localPeer.reconnect();\n                showToast(\"video call component disconnected\");\n            });\n\n            localPeer.on(\"error\", error => {\n                console.error(\"localPeer error,the error information is : \", JSON.stringify(error));\n                showToast(\"video call component error\");\n            });\n\n            localPeer.on(\"open\", localPeerId => {\n                console.log(\"localPeer opened,the local peer id is: \", localPeerId);\n                peerStore.localPeer = localPeer;\n                resolve();\n            });\n        });\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}