{"ast":null,"code":"import Peer from \"peerjs\";\nimport networkConfiguration from \"@/network/configuration\";\nimport usePeerStore from \"@/store/peer\";\nimport { showToast } from \"vant\";\nexport default function initializePeer(username) {\n  let peerStore = usePeerStore();\n  let {\n    host,\n    port,\n    path\n  } = {\n    ...networkConfiguration.server.peerServer\n  };\n  let localPeer = new Peer(username, {\n    host,\n    port,\n    path\n  });\n  localPeer.on(\"connection\", dataConnection => {\n    console.log(\"localPeer on connection\", dataConnection);\n    if (peerStore.dataConnection) {\n      dataConnection.on(\"open\", () => {\n        dataConnection.send({\n          instruction: peerStore.instruction.busy\n        });\n      });\n    } else {\n      dataConnection.on(\"data\", data => {\n        console.log(\"dataConnection data\", data);\n\n        //请求通话\n        if (data.instruction === peerStore.instruction.request) {\n          peerStore.dataConnection = dataConnection;\n          //激活通知\n          peerStore.activateNotification = true;\n        }\n\n        //对方取消\n        else if (data.instruction === peerStore.instruction.cancel) {\n          //关闭数据连接\n          peerStore.dataConnection.close();\n          peerStore.dataConnection = undefined;\n          //取消激活通知\n          peerStore.activateNotification = false;\n        }\n\n        //对方挂断\n        else if (data.instruction === peerStore.instruction.ringOff) {\n          //关闭数据连接\n          peerStore.dataConnection.close();\n          peerStore.dataConnection = undefined;\n          //关闭媒体连接\n          peerStore.mediaConnection.close();\n          peerStore.mediaConnection = undefined;\n        }\n      });\n    }\n  });\n  localPeer.on(\"call\", mediaConnection => {\n    console.log(\"localPeer call\", mediaConnection);\n    peerStore.mediaConnection = mediaConnection;\n  });\n  localPeer.on(\"disconnected\", () => {\n    console.warn(\"localPeer disconnected\");\n    localPeer.reconnect();\n    showToast(\"video call component disconnected\");\n  });\n  localPeer.on(\"error\", error => {\n    console.error(\"localPeer error,the error information is : \", JSON.stringify(error));\n    showToast(\"video call component error\");\n  });\n  localPeer.on(\"open\", localPeerId => {\n    console.log(\"localPeer opened,the local peer id is: \", localPeerId);\n    peerStore.localPeer = localPeer;\n  });\n}","map":{"version":3,"names":["Peer","networkConfiguration","usePeerStore","showToast","initializePeer","username","peerStore","host","port","path","server","peerServer","localPeer","on","dataConnection","console","log","send","instruction","busy","data","request","activateNotification","cancel","close","undefined","ringOff","mediaConnection","warn","reconnect","error","JSON","stringify","localPeerId"],"sources":["/Users/jiezhou/IdeaProjects/web/src/plugins/initialize-peer/index.js"],"sourcesContent":["import Peer from \"peerjs\";\nimport networkConfiguration from \"@/network/configuration\";\nimport usePeerStore from \"@/store/peer\";\nimport {showToast} from \"vant\";\n\nexport default function initializePeer (username) {\n    let peerStore = usePeerStore();\n\n    let {host, port, path} = {...networkConfiguration.server.peerServer};\n    let localPeer = new Peer(username, {host, port, path});\n\n    localPeer.on(\"connection\", dataConnection => {\n        console.log(\"localPeer on connection\", dataConnection);\n        if (peerStore.dataConnection) {\n            dataConnection.on(\"open\", () => {\n                dataConnection.send({\n                    instruction: peerStore.instruction.busy\n                });\n            });\n        } else {\n            dataConnection.on(\"data\", data => {\n                console.log(\"dataConnection data\", data);\n\n                //请求通话\n                if (data.instruction === peerStore.instruction.request) {\n                    peerStore.dataConnection = dataConnection;\n                    //激活通知\n                    peerStore.activateNotification = true;\n                }\n\n                //对方取消\n                else if (data.instruction === peerStore.instruction.cancel) {\n                    //关闭数据连接\n                    peerStore.dataConnection.close();\n                    peerStore.dataConnection = undefined;\n                    //取消激活通知\n                    peerStore.activateNotification = false;\n                }\n\n                //对方挂断\n                else if (data.instruction === peerStore.instruction.ringOff) {\n                    //关闭数据连接\n                    peerStore.dataConnection.close();\n                    peerStore.dataConnection = undefined;\n                    //关闭媒体连接\n                    peerStore.mediaConnection.close();\n                    peerStore.mediaConnection = undefined;\n                }\n            });\n        }\n    });\n\n    localPeer.on(\"call\", mediaConnection => {\n        console.log(\"localPeer call\", mediaConnection);\n        peerStore.mediaConnection = mediaConnection;\n    });\n\n    localPeer.on(\"disconnected\", () => {\n        console.warn(\"localPeer disconnected\");\n        localPeer.reconnect();\n        showToast(\"video call component disconnected\");\n    });\n\n    localPeer.on(\"error\", error => {\n        console.error(\"localPeer error,the error information is : \", JSON.stringify(error));\n        showToast(\"video call component error\");\n    });\n\n    localPeer.on(\"open\", localPeerId => {\n        console.log(\"localPeer opened,the local peer id is: \", localPeerId);\n        peerStore.localPeer = localPeer;\n    });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}